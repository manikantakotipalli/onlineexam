package oe.utility.Dao;

import java.sql.Connection;


import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import oe.utility.Dbconnection.DBconnection;
import oe.utility.FacultyModel.FacultyModel;
import oe.utility.StudentModel.StudentModel;
import oe.utility.interfaces.Interfaces;
/**
 *  Here "OnlineExamDao" is a Class and It's Implementing some method from Interfaces..!! 
 */
public class OnlineExamDao implements Interfaces {

	String result="DATANOTFOUND";
	String status = "null";

	/**
	 * 
	 * date: 29-05-2024
	 * Here "checkingUserId" method will have checked the username is Valid or Not
	 */
	@Override
public String checkingUserId(String s) {
		
		
	       System.out.println("Data Came From AdminLoginServlet");
	       
		Connection con=DBconnection.getConnection(); //Data Base Connection..!
		
		try {
			  PreparedStatement ps1=con.prepareStatement("select *from studentdata where student_id=(?)");
				
				
				 ps1.setString(1,s);
			 
			      /// Result Set  
			       ResultSet rs1=ps1.executeQuery();
			       
			       rs1.last();
			       
			       int n1=rs1.getRow();
		               System.out.println(n1 +"-"+"row is There ");
		               
		               
			       if(n1>0) {
				    	 result="DATAFOUND";	    	  
				       }
			       else {
			    	   PreparedStatement ps2=con.prepareStatement("select *from facultydata where faculty_id=(?)");
						
						
						 ps2.setString(1,s);
					 
					      /// Result Set  
					       ResultSet rs2=ps2.executeQuery();
					       
					       rs2.last();
					       
					       int n2=rs2.getRow();
					       System.out.println(n2 +"-"+"row is There ");
					       if(n2>0) {
					    	   result="DATAFOUND";
					       }
					       else
					       {
					    	   PreparedStatement ps3=con.prepareStatement("select *from adminlogin where username=(?)");
								
								
								 ps3.setString(1,s);
							 
							      /// Result Set  
							       ResultSet rs3=ps3.executeQuery();
							       
							       rs3.last();
							      
							       
							       int n3=rs3.getRow(); 
							       System.out.println(n3 +"-"+"row is There ");
							       if(n3>0) {
							    	   result="DATAFOUND";
							       }
					       }
			    	   
			       }
		 }
		 catch(Exception e){
			 
			 System.out.println(e);
			  
	     }
		 return result;
	
		 
	}
	
	
	
	
	
	
	
	

	public String AdminLoginDetails(String username, String password) {
		Connection con=DBconnection.getConnection(); //Data Base Connection..!
		try{PreparedStatement ps = con.prepareStatement("select * from adminlogin where username = ? and passwords=?");
		ps.setString(1, username);
		ps.setString(2, password);
		
		ResultSet rs= ps.executeQuery();
		rs.last();
		int n= rs.getRow();
		if(n>0) {
			status="Admin";
		}
		
		
		
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return status;
	}

	
	/**
	 * 
	 * 
	 * FacultyLoginDetails
	 */
	
	public String FacultyLoginDetails(String username, String password) {
		
		
		
		
		
		
		
		return status;
		
	}
	
	/**
	 * 
	 * StudentLogin
	 */
	public String StudentLoginDetails(String username, String password) {
		
		
		
		
		
		
		
		return status;
		
	}
	
	
	
	
	
	
	
	
	
	/**
	 * StoringStudentdata
	 */
	
	public String StoreStudentData(StudentModel sm) {
		String ok="null";
	
		
		Connection con=DBconnection.getConnection(); //Data Base Connection..!
		                                            
		 try {
			PreparedStatement ps=con.prepareStatement("insert into studentdata values(?,?,?,?,?,?,?,?)");
			System.out.println("Dao");
			
			System.out.println(sm.getFirstname());
			
			
			   ps.setInt(1, 0);
			   ps.setString(2,sm.getFirstname()); 
			   ps.setString(3,sm.getLasttname());
			   
			   ps.setLong(4,sm.getMobilenumber());
			   ps.setString(5,sm.getCreatepassword());	
			   ps.setString(6,sm.getEmailaddress());
			   ps.setInt(7,sm.getCoursename());
			   ps.setLong(8,sm.getBatchno());
			  
			   	   
			   	   
			   	   
			   	   
			   	   
			   	   
	               int n=ps.executeUpdate();
	               System.out.println(n);
				if(n>0) {
				
			      ok="yes";
			   
				}
				
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		 return ok;
	}
/**
 * countting students
 * @return
 */
public int countOfStudent() {
	 int count=0;
	Connection con=DBconnection.getConnection(); //Data Base Connection..!
	
	 
	 
	try {
		PreparedStatement 	ps = con.prepareStatement("select *from studentdata ");

		  ResultSet rs=ps.executeQuery();
		  rs.last();
		  count= rs.getRow();
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
	
	
	return count;
	
}







	/**
	 * Storing Faculty Data
	 */
	public String StoreFacultyData(FacultyModel fm) {
		   String ok="null";
		Connection con=DBconnection.getConnection(); //Data Base Connection..!
		     
		try {
			PreparedStatement ps=con.prepareStatement("insert into facultydata values(?,?,?,?,?,?)");
			
			 ps.setInt(1, 0);
			   ps.setString(2,fm.getFistrname());
			   ps.setString(3,fm.getLastname());
			   ps.setLong(4,fm.getPhonenumber());
			   ps.setString(5, fm.getEmail());
			   ps.setString(6,fm.getPassword());
			
			int n=  ps.executeUpdate();
			if(n>0) {
				   
			      ok="yes";
			   
				}
			
				
			
			
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		
		return ok;
		
		
	}
	
	/**
	 * Coutting Faculty
	 * @return
	 */
	public int countOfFaculty() {
	
		int count=0;
		Connection con=DBconnection.getConnection(); //Data Base Connection..
		
		
		try {
			PreparedStatement 	ps = con.prepareStatement("select *from facultydata");
			  ResultSet rs=ps.executeQuery();
			  rs.last();
			  count= rs.getRow();
			
			
			
			
			
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		
		
		return count;
		
		
		
		
	}
}
